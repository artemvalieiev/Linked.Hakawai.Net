// This file has been autogenerated from a class added in the UI designer.

using ObjCRuntime;
using LinkedIn.Hakawai;

namespace LinkedIn.Hakawai.Sample;

public partial class DefaultChooserViewController : UIViewController
{
    private HKWMentionsPluginV2 mentionsPlugin;

    public DefaultChooserViewController(IntPtr handle) : base(handle)
    {
    }

    public override void ViewDidLoad()
    {
        base.ViewDidLoad();

        var textView = View.Subviews.First(x => x is HKWTextView) as HKWTextView;
        var characterSet = NSCharacterSet.FromString("@+＠");

        HKWTextView.EnableMentionsPluginV2 = true;
        mentionsPlugin =
            HKWMentionsPluginV2.MentionsPluginWithChooserMode(
                HKWMentionsChooserPositionMode.EnclosedTop,
                characterSet, 1);


        mentionsPlugin.DefaultChooserViewDelegate = new SampleDefaultChooserView();
        textView!.ControlFlowPlugin = mentionsPlugin;

        textView.SetOnAccessoryViewAttachmentBlock((UIView view, bool enabled) =>
        {
            Console.WriteLine(view?.ToString() ?? "NULL");
            Console.WriteLine(enabled.ToString());
        });
    }
}

public class SampleDefaultChooserView : HKWMentionsDefaultChooserViewDelegate
{
    public SampleDefaultChooserView()
    {
    }

    public SampleDefaultChooserView(NativeHandle handle) : base(handle)
    {
    }

    public override nfloat HeightForCellForMentionsEntity(HKWMentionsEntityProtocol entity, UITableView tableView)
    {
        return 44f;
    }

    public override void AsyncRetrieveEntitiesForKeyString(string keyString, HKWMentionsSearchType type,
        ushort character,
        Action<NSArray, bool, bool> completionBlock)
    {
        var filtered = Helpers.MentionEntities.Where(x => x.Name.Contains(keyString)).ToArray();
        completionBlock(NSArray.FromNSObjects((x) => x, filtered), true, false);
    }

    public override UITableViewCell CellForMentionsEntity(HKWMentionsEntityProtocol entity, string matchString,
        UITableView tableView,
        NSIndexPath indexPath)
    {
        var cell = tableView.DequeueReusableCell("MentionTableViewCell");
        if (cell == null)
        {
            cell = new UITableViewCell(UITableViewCellStyle.Subtitle, "MentionTableViewCell");
            cell.BackgroundColor = UIColor.Gray;
        }

        cell.TextLabel.Text = (entity as MentionEntity)!.Name;
        cell.DetailTextLabel.Text = (entity as MentionEntity)!.Id;
        return cell;
    }
}